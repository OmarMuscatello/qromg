{"version":3,"sources":["components/ProgressBar/ProgressBar.module.scss","components/InputBox/InputBox.module.scss","components/Output/Output.module.scss","components/Snackbar/Snackbar.module.scss","components/Header/Header.module.scss","components/App.module.scss","Worker.js","components/Button/Button.module.scss","components/Header/Header.js","serviceWorker.js","WorkerManager.js","utils.js","components/Button/Button.js","components/ProgressBar/ProgressBar.js","components/Snackbar/snackbarContext.js","components/InputBox/InputBox.js","components/Output/Output.js","components/Snackbar/Snackbar.js","components/Main/Main.js","components/App.js","index.js"],"names":["module","exports","Worker","className","classes","root","title","isLocalhost","Boolean","window","location","hostname","match","_resolve","_reject","registerPromise","Promise","resolve","reject","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","waiting","updateDownloaded","onupdatefound","installingWorker","installing","onstatechange","state","controller","availableOffline","catch","error","WorkerManager","constructor","_onMessageReceived","data","action","promise","this","_promises","id","success","result","_worker","addEventListener","generateQrCode","content","requestId","_generateId","postMessage","Math","random","toString","substr","isNil","obj","classNames","params","param","Array","join","Object","entries","key","transitionEndEventName","el","document","createElement","transEndEventNames","transition","WebkitTransition","MozTransition","OTransition","name","undefined","style","children","rest","ProgressBar","progress","isIndeterminate","primaryFillStyle","progressValue","number","min","max","clampNumber","transform","toFixed","role","mode","aria-valuenow","aria-valuemax","aria-valuemin","fill","fillPrimary","fillSecondary","React","createContext","message","show","hide","InputBox","Component","inputValue","inputElemRef","createRef","inputChangeHandler","currentTarget","setState","value","formSubmitHandler","event","preventDefault","props","generateHandler","current","focus","shouldComponentUpdate","nextProps","nextState","generating","render","form","onSubmit","aria-label","input","type","autoComplete","onChange","disabled","ref","placeholder","Button","btnGenerate","progressBar","hidden","contextType","ToastContext","Output","PureComponent","super","downloadImage","canvas","canvasRef","image","imageRef","link","linkRef","width","height","getContext","drawImage","href","toDataURL","replace","click","imgSrc","hideImage","length","download","container","img","src","alt","btnDownload","onClick","defaultHideDelay","Snackbar","visible","rootRef","componentDidUpdate","setTimeout","onHideComplete","once","hideDelay","hasAction","aria-hidden","text","handler","SnackbarWrapper","hideCompleteHandler","context","SnackbarContext","Main","showProgressBarTimeout","workerManager","output","generate","console","log","clearTimeout","componentDidMount","waitingServiceWorker","target","reload","App","snackBarMessage","snackBarQueue","showSnackbar","push","hideSnackbar","nextElement","shift","Provider","app","Header","rootElement","getElementById","URL","process","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"gFACAA,EAAOC,QAAU,CAAC,KAAO,0BAA0B,KAAO,0BAA0B,cAAgB,mCAAmC,YAAc,iCAAiC,mDAAmD,sEAAsE,+CAA+C,kEAAkE,qDAAqD,wEAAwE,iDAAiD,sE,gBCA9kBD,EAAOC,QAAU,CAAC,KAAO,uBAAuB,KAAO,uBAAuB,MAAQ,wBAAwB,YAAc,8BAA8B,YAAc,gC,gBCAxKD,EAAOC,QAAU,CAAC,KAAO,qBAAqB,UAAY,0BAA0B,IAAM,oBAAoB,YAAc,8B,gBCA5HD,EAAOC,QAAU,CAAC,KAAO,uBAAuB,KAAO,uBAAuB,UAAY,4BAA4B,OAAS,2B,kBCA/HD,EAAOC,QAAU,CAAC,KAAO,qBAAqB,MAAQ,wB,iBCAtDD,EAAOC,QAAU,CAAC,IAAM,mB,gBCDxBD,EAAOC,QAAU,WACf,OAAO,IAAIC,OAAO,IAA0B,oC,gBCA9CF,EAAOC,QAAU,CAAC,KAAO,uB,0JCEV,MACX,4BAAQE,UAAWC,IAAQC,MACvB,wBAAIF,UAAWC,IAAQE,OAAvB,SACA,gICNR,MAAMC,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAIJ,IAAIC,EAAW,KACXC,EAAU,KAEP,MAAMC,EAAkB,IAAIC,QAAQ,CAACC,EAASC,KACnDL,EAAWI,EACXH,EAAUI,IAqCZ,SAASC,EAAgBC,GACvBC,UAAUC,cAAcC,SAASH,GAAOI,KAAKC,IAEvCA,EAAaC,QACfb,EAAS,CAAEc,kBAAkB,EAAMF,iBAIrCA,EAAaG,cAAgB,KAC3B,MAAMC,EAAmBJ,EAAaK,WAEd,MAApBD,IAIJA,EAAiBE,cAAgB,KACA,cAA3BF,EAAiBG,QACfX,UAAUC,cAAcW,WAC1BpB,EAAS,CAAEc,kBAAkB,EAAMF,iBAEnCZ,EAAS,CAAEqB,kBAAkB,EAAMT,uBAO1CU,MAAMC,IACLtB,EAAQsB,K,qBC7EC,MAAMC,EAEjBC,cAAe,KAOfC,mBAAsB,IAAc,IAAZC,EAAW,EAAXA,KACpB,GAAoB,WAAhBA,EAAKC,OAAqB,CAC1B,MAAMC,EAAUC,KAAKC,UAAUJ,EAAKK,IAEhCL,EAAKM,QACLJ,EAAQzB,QAAQuB,EAAKO,QAErBL,EAAQxB,gBAGLyB,KAAKC,UAAUJ,EAAKK,MAhB/BF,KAAKK,QAAU,IAAI9C,IACnByC,KAAKK,QAAQC,iBAAiB,UAAWN,KAAKJ,oBAE9CI,KAAKC,UAAY,GAiBrBM,eAAeC,GACX,MAAMC,EAAYT,KAAKU,cAEjBX,EAAU,IAAI1B,QAAQ,CAACC,EAASC,KAClCyB,KAAKC,UAAUQ,GAAa,CAAEnC,UAASC,YAS3C,OANAyB,KAAKK,QAAQM,YAAY,CACrBT,GAAIO,EACJX,OAAQ,SACRU,YAGGT,EAGXW,cACI,MAAO,IAAME,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAG,I,mBC3CnD,SAASC,EAAMC,GAClB,OAAe,OAARA,GAA+B,qBAARA,EAG3B,SAASC,IACZ,IAAId,EAAS,GADqB,2BAARe,EAAQ,yBAARA,EAAQ,gBAGlC,cAAoBA,EAApB,eAA4B,CAAvB,MAAMC,EAAK,KACZ,IAAIJ,EAAMI,GAIV,GAAIA,aAAiBC,MACjBjB,GAAU,IAAMgB,EAAME,KAAK,UAE1B,GAAqB,kBAAVF,EAEZ,cAA2BG,OAAOC,QAAQJ,GAA1C,eAAkD,CAAC,MAAD,oCAAtCK,EAAsC,YAE1CrB,GAAU,IAAMqB,QAKxBrB,GAAU,IAAMgB,EAIxB,OAAOhB,EAOJ,MAAMsB,EAAyB,MAClC,MAAMC,EAAKC,SAASC,cAAc,OAE5BC,EAAqB,CACvBC,WAAY,gBACZC,iBAAkB,sBAClBC,cAAe,gBACfC,YAAa,kBAGjB,IAAK,MAAMC,KAAQL,EACf,QAAuBM,IAAnBT,EAAGU,MAAMF,GACT,OAAOL,EAAmBK,GAIlC,MAAO,iBAhB2B,G,qBC/BvB,UAAG3E,EAAH,EAAGA,UAAW8E,EAAd,EAAcA,SAAaC,EAA3B,+CACX,0CAAQ/E,UAAW0D,EAAWzD,IAAQC,KAAMF,IAAgB+E,GACvDD,I,gBC0BME,MAzBM,IAA2C,IAAD,IAAxChF,iBAAwC,MAA5B,GAA4B,EAAxBiF,EAAwB,EAAxBA,SAAaF,EAAW,wCAE3D,MAAMG,EAAkB1B,EAAMyB,GAE9B,IAAIE,EAAmB,KACvB,IAAKD,EAAiB,CAClB,MAAME,EFkBP,SAAqBC,EAAQC,EAAKC,GACrC,OAAOnC,KAAKmC,IAAID,EAAKlC,KAAKkC,IAAIC,EAAKF,IEnBTG,CAAYP,EARzB,EADA,KAUTE,EAAmB,CAAEM,UAAU,UAAD,QAAaL,EAAgB,KAAKM,QAAQ,GAA1C,MAGlC,OACI,uCACI1F,UAAW0D,EAAWzD,IAAQC,KAAMF,GACpC2F,KAAK,cACLC,KAAMV,EAAkB,gBAAkB,cAC1CW,gBAAeZ,EACfa,gBAnBK,IAoBLC,gBAnBK,GAoBDhB,GACJ,yBAAK/E,UAAW0D,EAAWzD,IAAQ+F,KAAM/F,IAAQgG,aAAcpB,MAAOM,IACtE,yBAAKnF,UAAW0D,EAAWzD,IAAQ+F,KAAM/F,IAAQiG,mBCzB9CC,MAAMC,cAAc,CAC/BC,QAAS,GACTC,KAAM,OACNC,KAAM,S,gBCCK,MAAMC,UAAiBC,YAAW,cAAD,yBAC5C5E,MAAQ,CACJ6E,WAAY,2CAF4B,KAO5CC,aAAeR,IAAMS,YAPuB,KAS5CC,mBAAsB,IAAuB,IAArBC,EAAoB,EAApBA,cACpBtE,KAAKuE,SAAS,CAAEL,WAAYI,EAAcE,SAVF,KAa5CC,kBAAoBC,IAChBA,EAAMC,iBAGwB,KAA1B3E,KAAKX,MAAM6E,WAOflE,KAAK4E,MAAMC,gBAAgB7E,KAAKX,MAAM6E,YANlClE,KAAKmE,aAAaW,QAAQC,SASlCC,sBAAsBC,EAAWC,GAC7B,OAAOlF,KAAKX,MAAM6E,aAAegB,EAAUhB,YAAclE,KAAK4E,MAAMO,aAAeF,EAAUE,WAGjGC,SACI,OACI,yBAAK5H,UAAWC,IAAQC,MACpB,0BAAMF,UAAWC,IAAQ4H,KAAMC,SAAUtF,KAAKyE,mBAC1C,2BACIc,aAAW,aACX/H,UAAWC,IAAQ+H,MACnBC,KAAK,OACLC,aAAa,MACbC,SAAU3F,KAAKqE,mBACfG,MAAOxE,KAAKX,MAAM6E,WAClB0B,SAAU5F,KAAK4E,MAAMO,WACrBU,IAAK7F,KAAKmE,aACV2B,YAAY,mBAEhB,kBAACC,EAAD,CACIN,KAAK,SACLjI,UAAWC,IAAQuI,YACnBJ,SAAU5F,KAAK4E,MAAMO,YAHzB,cAQJ,kBAAC,EAAD,CAAa3H,UAAWC,IAAQwI,YAAaC,QAASlG,KAAK4E,MAAMO,eAtD5DnB,EAKVmC,YAAcC,E,oBCNV,MAAMC,UAAeC,gBAChC3G,YAAYiF,GACR2B,MAAM3B,GADS,KAOnB4B,cAAgB,KACZ,MAAMC,EAASzG,KAAK0G,UAAU5B,QACxB6B,EAAQ3G,KAAK4G,SAAS9B,QACtB+B,EAAO7G,KAAK8G,QAAQhC,QAE1B2B,EAAOM,MAAQJ,EAAMI,MACrBN,EAAOO,OAASL,EAAMK,OAENP,EAAOQ,WAAW,MAE1BC,UAAUP,EAAO,EAAG,GAE5BE,EAAKM,KAAOV,EAAOW,UAAU,aAAaC,QAAQ,iBAAkB,iCACpER,EAAKS,SAlBLtH,KAAK0G,UAAY/C,IAAMS,YACvBpE,KAAK4G,SAAWjD,IAAMS,YACtBpE,KAAK8G,QAAUnD,IAAMS,YAmBzBgB,SAAU,MACEmC,EAAWvH,KAAK4E,MAAhB2C,OACFC,EAAYxG,EAAMuG,IAA6B,IAAlBA,EAAOE,OAE1C,OACI,yBAAKjK,UAAWC,IAAQC,MACpB,uBAAGmI,IAAK7F,KAAK8G,QAASK,KAAK,IAAIO,SAAS,aAAaxB,QAAM,IAE3D,4BAAQL,IAAK7F,KAAK0G,UAAWR,QAAM,IAEnC,yBACI1I,UAAWC,IAAQkK,UACnBzB,OAAQsB,GAER,yBACI3B,IAAK7F,KAAK4G,SACVpJ,UAAWC,IAAQmK,IACnBC,IAAKN,EACLO,IAAI,sBAER,kBAAC/B,EAAD,CACIvI,UAAWC,IAAQsK,YACnBC,QAAShI,KAAKwG,eAFlB,e,oBC5CpB,MAAMyB,EAAmB,IAEzB,MAAMC,UAAiBjE,YAYnBtE,YAAYiF,GACR2B,MAAM3B,GADS,KALnBvF,MAAQ,CACJ8I,SAAS,EACTtE,QAAS,MAKT7D,KAAKoI,QAAUhE,sBAGnBiE,qBAI6B,IAAD,EAApBrI,KAAKX,MAAM8I,SACXG,WAAW,KACPtI,KAAKoI,QAAQtD,QAAQxE,iBAAiBoB,EAAwB1B,KAAK4E,MAAM2D,eAAgB,CAAEC,MAAM,IACjGxI,KAAKuE,SAAS,CAAE4D,SAAS,KAFnB,UAGPnI,KAAKX,MAAMwE,QAAQ4E,iBAHZ,QAGyBR,GAI3C,gCAAgCrD,EAAOvF,GASnC,OAAIuF,EAAMf,UAAYxE,EAAMwE,SAA6B,OAAlBe,EAAMf,QAClC,CAAEsE,SAAS,EAAMtE,QAASe,EAAMf,SAGpCxE,EAGX2F,sBAAsBC,EAAWC,GAC7B,OAAOlF,KAAKX,MAAMwE,UAAYqB,EAAUrB,SAAW7D,KAAKX,MAAM8I,UAAYjD,EAAUiD,QAGxF/C,SAAU,MAAD,EACwBpF,KAAKX,MAA1BwE,EADH,EACGA,QAASsE,EADZ,EACYA,QAEjB,OACI,yBACItC,IAAK7F,KAAKoI,QACV5K,UAAW0D,EACPzD,IAAQC,KACR,CACI,CAACD,IAAQqG,MAAOqE,EAChB,CAAC1K,IAAQiL,WAAT,OAAqB7E,QAArB,IAAqBA,OAArB,EAAqBA,EAAS/D,SAGtC6I,eAAc3I,KAAKX,MAAM8I,SACzB,qCAAOtE,QAAP,IAAOA,OAAP,EAAOA,EAAS+E,OAGL,OAAP/E,QAAO,IAAPA,OAAA,EAAAA,EAAS/D,SACT,4BACItC,UAAWC,IAAQqC,OACnBkI,QAASnE,EAAQ/D,OAAO+I,SACvBhF,EAAQ/D,OAAO8I,QAQzB,MAAME,UAAwB7E,YAAW,cAAD,yBAInD8E,oBAAsB,KAClB/I,KAAKgJ,QAAQjF,QAGjBqB,SACI,OACI,kBAAC,EAAD,CACIvB,QAAS7D,KAAKgJ,QAAQnF,QACtB0E,eAAgBvI,KAAK+I,uBAZhBD,EAEV3C,YAAc8C,EC/EV,MAAMC,UAAajF,YAAW,cAAD,yBAExCkF,uBAAyB,KAFe,KAGxCC,cAAgB,KAHwB,KAOxC/J,MAAQ,CACJ8F,YAAY,EACZkE,OAAQ,IAT4B,KAkDxCC,SAAW9I,IAGPR,KAAKmJ,uBAAyBb,WAAW,KACrCtI,KAAKuE,SAAS,CAAEY,YAAY,EAAMkE,OAAQ,MAC3C,KAEHrJ,KAAKoJ,cAAc7I,eAAeC,GAC7B3B,KAAKgB,IACFG,KAAKuE,SAAS,CAAE8E,OAAQxJ,MAE3BL,MAAMC,IAEH8J,QAAQC,IAAI,2CAEf3K,KAAK,KACF4K,aAAazJ,KAAKmJ,wBAClBnJ,KAAKuE,SAAS,CAAEY,YAAY,OAvDxCuE,oBACI1J,KAAKoJ,cAAgB,IAAI1J,EAEzBtB,EACKS,KAAM,IAA0D,IAAxDU,EAAuD,EAAvDA,iBAAkBP,EAAqC,EAArCA,iBAAkBF,EAAmB,EAAnBA,aAErCS,EACAS,KAAKgJ,QAAQlF,KAAK,CAAE8E,KAAM,2BAIrB5J,GACLgB,KAAKgJ,QAAQlF,KAAK,CACd8E,KAAM,yBACN9I,OAAQ,CACJ8I,KAAM,cACNC,QAAS,KAEL,MAAMc,EAAuB7K,EAAaC,QAEtC4K,IACAA,EAAqBrJ,iBAAiB,cAAeoE,IACtB,cAAvBA,EAAMkF,OAAOvK,OACbvB,OAAOC,SAAS8L,WAGxBF,EAAqBhJ,YAAY,CAAE8E,KAAM,wBAOhEjG,MAAMC,IACH8J,QAAQC,IAAI,4CAA6C/J,KAyBrE2F,SACI,OACI,8BACI,kBAAC,EAAD,CACIP,gBAAiB7E,KAAKsJ,SACtBnE,WAAYnF,KAAKX,MAAM8F,aAC3B,kBAAC,EAAD,CAAQoC,OAAQvH,KAAKX,MAAMgK,SAC3B,kBAAC,EAAD,QA9EKH,EAKV/C,YAAc8C,ECNV,MAAMa,UAAY7F,YAAW,cAAD,yBACzC5E,MAAQ,CACN0K,gBAAiB,MAFsB,KAKzCC,cAAgB,GALyB,KAOzCC,aAAepG,IACsB,OAA/B7D,KAAKX,MAAM0K,gBACb/J,KAAKuE,SAAS,CAAEwF,gBAAiBlG,IAGjC7D,KAAKgK,cAAcE,KAAKrG,IAZa,KAgBzCsG,aAAe,KACb,GAAkC,IAA9BnK,KAAKgK,cAAcvC,OACrBzH,KAAKuE,SAAS,CAAEwF,gBAAiB,WAC5B,CACL,MAAMK,EAAcpK,KAAKgK,cAAcK,QACvCrK,KAAKuE,SAAS,CAAEwF,gBAAiBK,MAIrChF,SACE,OACE,kBAAC,EAAakF,SAAd,CACE9F,MAAO,CACLX,QAAS7D,KAAKX,MAAM0K,gBACpBjG,KAAM9D,KAAKiK,aACXlG,KAAM/D,KAAKmK,eAEb,yBAAK3M,UAAWC,IAAQ8M,KACtB,kBAACC,EAAD,MACA,kBAAC,EAAD,S,MCpCV,MAAMC,EAAc7I,SAAS8I,eAAe,QAE5CtF,iBAAO,kBAAC,EAAD,MAASqF,GXUT,WACL,GAA6C,kBAAmB/L,UAAW,CAGzE,GADkB,IAAIiM,IAAIC,SAAwB9M,OAAOC,SAASoJ,MACpD0D,SAAW/M,OAAOC,SAAS8M,OAIvC,OAGF/M,OAAOwC,iBAAiB,OAAQ,KAC9B,MAAM7B,EAAK,UAAMmM,SAAN,sBAEPhN,IAoDV,SAAiCa,GAE/BqM,MAAMrM,EAAO,CACXsM,QAAS,CAAE,iBAAkB,YAE5BlM,KAAKmM,IAEJ,MAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C1M,UAAUC,cAAc0M,MAAMxM,KAAKC,IACjCA,EAAawM,aAAazM,KAAK,KAC7Bf,OAAOC,SAAS8L,aAKpBrL,EAAgBC,KAGnBe,MAAM,KACL+J,QAAQC,IACN,mEA3EA+B,CAAwB9M,GAIxBC,UAAUC,cAAc0M,MAAMxM,KAAK,KACjC0K,QAAQC,IACN,iHAMJhL,EAAgBC,MWpCxBG,K","file":"static/js/main.6dabba5c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProgressBar_root__3jRL8\",\"fill\":\"ProgressBar_fill__3mdsj\",\"fillSecondary\":\"ProgressBar_fillSecondary__25eOe\",\"fillPrimary\":\"ProgressBar_fillPrimary__1XRo_\",\"mat-progress-bar-primary-indeterminate-translate\":\"ProgressBar_mat-progress-bar-primary-indeterminate-translate__kukYN\",\"mat-progress-bar-primary-indeterminate-scale\":\"ProgressBar_mat-progress-bar-primary-indeterminate-scale__3m7A8\",\"mat-progress-bar-secondary-indeterminate-translate\":\"ProgressBar_mat-progress-bar-secondary-indeterminate-translate__3gtFN\",\"mat-progress-bar-secondary-indeterminate-scale\":\"ProgressBar_mat-progress-bar-secondary-indeterminate-scale__15GgB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"InputBox_root__Vfoly\",\"form\":\"InputBox_form__3CKzU\",\"input\":\"InputBox_input__1pD39\",\"btnGenerate\":\"InputBox_btnGenerate__15SeU\",\"progressBar\":\"InputBox_progressBar__1_PVE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Output_root__dpcWk\",\"container\":\"Output_container__3lPpV\",\"img\":\"Output_img__37r-k\",\"btnDownload\":\"Output_btnDownload__3Qy6L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Snackbar_root__3ErI0\",\"show\":\"Snackbar_show__nJxcA\",\"hasAction\":\"Snackbar_hasAction__2hBaF\",\"action\":\"Snackbar_action__3dSnk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Header_root__2i1D9\",\"title\":\"Header_title__2rmfn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2v81I\"};","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"9a3633351a1a96cf06a9.worker.js\");\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Button_root__22lWs\"};","import React from 'react';\r\nimport classes from './Header.module.scss';\r\n\r\nexport default () => (\r\n    <header className={classes.root}>\r\n        <h1 className={classes.title}>QROMG</h1>\r\n        <p>Type a text in the box below and click the \"Generate!\" button. The QR Code will appear below it.</p>\r\n    </header>\r\n);","const isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nlet _resolve = null;\r\nlet _reject = null;\r\n\r\nexport const registerPromise = new Promise((resolve, reject) => {\r\n  _resolve = resolve;\r\n  _reject = reject;\r\n});\r\n\r\nexport function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a services ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker.register(swUrl).then(registration => {\r\n\r\n    if (registration.waiting) {\r\n      _resolve({ updateDownloaded: true, registration });\r\n      return;\r\n    }\r\n\r\n    registration.onupdatefound = () => {\r\n      const installingWorker = registration.installing;\r\n\r\n      if (installingWorker == null) {\r\n        return;\r\n      }\r\n\r\n      installingWorker.onstatechange = () => {\r\n        if (installingWorker.state === 'installed') {\r\n          if (navigator.serviceWorker.controller) {\r\n            _resolve({ updateDownloaded: true, registration });\r\n          } else {\r\n            _resolve({ availableOffline: true, registration });\r\n          }\r\n        }\r\n      };\r\n    };\r\n\r\n  })\r\n    .catch(error => {\r\n      _reject(error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport Worker from 'worker-loader!./Worker';\r\n\r\nexport default class WorkerManager {\r\n\r\n    constructor() {\r\n        this._worker = new Worker();\r\n        this._worker.addEventListener('message', this._onMessageReceived);\r\n\r\n        this._promises = {};\r\n    }\r\n\r\n    _onMessageReceived = ({ data }) => {\r\n        if (data.action === 'create') {\r\n            const promise = this._promises[data.id];\r\n\r\n            if (data.success) {\r\n                promise.resolve(data.result);\r\n            } else {\r\n                promise.reject();\r\n            }\r\n\r\n            delete this._promises[data.id];\r\n        }\r\n    }\r\n\r\n    generateQrCode(content) {\r\n        const requestId = this._generateId();\r\n\r\n        const promise = new Promise((resolve, reject) => {\r\n            this._promises[requestId] = { resolve, reject };\r\n        });\r\n\r\n        this._worker.postMessage({\r\n            id: requestId,\r\n            action: 'create',\r\n            content\r\n        });\r\n\r\n        return promise;\r\n    }\r\n\r\n    _generateId() {\r\n        return '_' + Math.random().toString(36).substr(2, 9);\r\n    }\r\n}","export function isNil(obj) {\r\n    return obj === null || typeof obj === 'undefined';\r\n}\r\n\r\nexport function classNames(...params) {\r\n    let result = '';\r\n\r\n    for (const param of params) {\r\n        if (isNil(param)) {\r\n            continue;\r\n        }\r\n\r\n        if (param instanceof Array) {\r\n            result += ' ' + param.join(' ');\r\n        }\r\n        else if (typeof param === 'object') {\r\n            // Key is the class name to add if value evaluates to true\r\n            for (const [key, value] of Object.entries(param)) {\r\n                if (value) {\r\n                    result += ' ' + key;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            result += ' ' + param;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function clampNumber(number, min, max) {\r\n    return Math.max(min, Math.min(max, number));\r\n}\r\n\r\nexport const transitionEndEventName = (() => {\r\n    const el = document.createElement('div');\r\n\r\n    const transEndEventNames = {\r\n        transition: 'transitionend',\r\n        WebkitTransition: 'webkitTransitionEnd',\r\n        MozTransition: 'transitionend',\r\n        OTransition: 'otransitionend'\r\n    }\r\n\r\n    for (const name in transEndEventNames) {\r\n        if (el.style[name] !== undefined) {\r\n            return transEndEventNames[name];\r\n        }\r\n    }\r\n\r\n    return 'transitionend';\r\n})();","import React from 'react';\r\nimport { classNames } from '../../utils';\r\nimport classes from './Button.module.scss';\r\n\r\nexport default ({ className, children, ...rest }) => (\r\n    <button className={classNames(classes.root, className)} {...rest}>\r\n        {children}\r\n    </button>\r\n);","import React from 'react';\r\nimport { clampNumber, classNames, isNil } from '../../utils';\r\nimport classes from './ProgressBar.module.scss';\r\n\r\nconst maxValue = 100;\r\nconst minValue = 0;\r\n\r\nconst ProgressBar = ({ className = '', progress, ...rest }) => {\r\n\r\n    const isIndeterminate = isNil(progress);\r\n\r\n    let primaryFillStyle = null;\r\n    if (!isIndeterminate) {\r\n        const progressValue = clampNumber(progress, minValue, maxValue);\r\n        primaryFillStyle = { transform: `scaleX(${(progressValue / 100).toFixed(4)})` };\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className={classNames(classes.root, className)}\r\n            role='progressbar'\r\n            mode={isIndeterminate ? 'indeterminate' : 'determinate'}\r\n            aria-valuenow={progress}\r\n            aria-valuemax={maxValue}\r\n            aria-valuemin={minValue}\r\n            {...rest}>\r\n            <div className={classNames(classes.fill, classes.fillPrimary)} style={primaryFillStyle}></div>\r\n            <div className={classNames(classes.fill, classes.fillSecondary)}></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProgressBar;","import React from 'react';\r\n\r\nexport default React.createContext({\r\n    message: {},\r\n    show: () => {},\r\n    hide: () => {}\r\n});","import React, { Component } from 'react';\r\nimport Button from '../Button/Button';\r\nimport ProgressBar from '../ProgressBar/ProgressBar';\r\nimport ToastContext from '../Snackbar/snackbarContext';\r\nimport classes from './InputBox.module.scss';\r\n\r\nexport default class InputBox extends Component {\r\n    state = {\r\n        inputValue: 'https://omarmuscatello.github.io/qromg/'\r\n    }\r\n\r\n    static contextType = ToastContext;\r\n\r\n    inputElemRef = React.createRef();\r\n\r\n    inputChangeHandler = ({ currentTarget }) => {\r\n        this.setState({ inputValue: currentTarget.value });\r\n    }\r\n\r\n    formSubmitHandler = event => {\r\n        event.preventDefault();\r\n\r\n        // Focus input if nothing has been typed\r\n        if (this.state.inputValue === '') {\r\n            this.inputElemRef.current.focus();\r\n            return;\r\n        }\r\n\r\n        // TODO: handle input validation\r\n\r\n        this.props.generateHandler(this.state.inputValue);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return this.state.inputValue !== nextState.inputValue || this.props.generating !== nextProps.generating;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.root}>\r\n                <form className={classes.form} onSubmit={this.formSubmitHandler}>\r\n                    <input\r\n                        aria-label='Input text'\r\n                        className={classes.input}\r\n                        type='text'\r\n                        autoComplete='off'\r\n                        onChange={this.inputChangeHandler}\r\n                        value={this.state.inputValue}\r\n                        disabled={this.props.generating}\r\n                        ref={this.inputElemRef}\r\n                        placeholder='Type text here' />\r\n\r\n                    <Button\r\n                        type='submit'\r\n                        className={classes.btnGenerate}\r\n                        disabled={this.props.generating}>\r\n                        GENERATE!\r\n                    </Button>\r\n                </form>\r\n\r\n                <ProgressBar className={classes.progressBar} hidden={!this.props.generating} />\r\n            </div>\r\n        );\r\n    }\r\n}","import Button from 'components/Button/Button';\r\nimport React, { PureComponent } from 'react';\r\nimport { isNil } from 'utils';\r\nimport classes from './Output.module.scss';\r\n\r\nexport default class Output extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.canvasRef = React.createRef();\r\n        this.imageRef = React.createRef();\r\n        this.linkRef = React.createRef();\r\n    }\r\n\r\n    downloadImage = () => {\r\n        const canvas = this.canvasRef.current;\r\n        const image = this.imageRef.current;\r\n        const link = this.linkRef.current;\r\n\r\n        canvas.width = image.width;\r\n        canvas.height = image.height;\r\n\r\n        const context = canvas.getContext('2d');\r\n\r\n        context.drawImage(image, 0, 0);\r\n\r\n        link.href = canvas.toDataURL('image/png').replace('data:image/png', 'data:application/octet-stream');\r\n        link.click();\r\n    }\r\n\r\n    render() {\r\n        const { imgSrc } = this.props;\r\n        const hideImage = isNil(imgSrc) || imgSrc.length === 0;\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <a ref={this.linkRef} href='#' download='qrcode.png' hidden></a>\r\n\r\n                <canvas ref={this.canvasRef} hidden></canvas>\r\n\r\n                <div\r\n                    className={classes.container}\r\n                    hidden={hideImage}>\r\n\r\n                    <img\r\n                        ref={this.imageRef}\r\n                        className={classes.img}\r\n                        src={imgSrc}\r\n                        alt='Generated QR Code' />\r\n\r\n                    <Button\r\n                        className={classes.btnDownload}\r\n                        onClick={this.downloadImage}>\r\n                        DOWNLOAD\r\n                    </Button>\r\n                </div>\r\n            </div>);\r\n    }\r\n};","import React, { Component, createRef } from 'react';\r\nimport { classNames, transitionEndEventName } from '../../utils';\r\nimport classes from './Snackbar.module.scss';\r\nimport SnackbarContext from './snackbarContext';\r\n\r\nconst defaultHideDelay = 4000;\r\n\r\nclass Snackbar extends Component {\r\n\r\n    /**\r\n     * `visible`: It indicates if the Snackbar should be displayed or not.\r\n     * \r\n     * `message`: An object which describes the message to show in the Snackbar. It's set to `null` only at init time. \r\n     */\r\n    state = {\r\n        visible: false,\r\n        message: null\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.rootRef = createRef();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        /** If the Snackbar is visible, change its state to not visible after the specified amount of time. Once the hiding transition is completed,\r\n         * call the related callback.\r\n         */\r\n        if (this.state.visible) {\r\n            setTimeout(() => {\r\n                this.rootRef.current.addEventListener(transitionEndEventName, this.props.onHideComplete, { once: true });\r\n                this.setState({ visible: false });\r\n            }, this.state.message.hideDelay ?? defaultHideDelay);\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        /** Show the snackbar and update the state.message only if the props.message has changed and it has been specified.\r\n         * Since we update the 'visible' property of the state to 'false' and this lifecycle hook is called also when\r\n         * setState is invoked, we want to avoid that we overwrite the 'visible' property. That's why the message is also stored into the state.\r\n         * \r\n         * We check that 'props.message' is not null because if the already shown message (state.message) is already set and the new message (props.message) is equal to null\r\n         * we don't want to show the Snackbar with null value. So,\r\n         */\r\n        if (props.message !== state.message && props.message !== null) {\r\n            return { visible: true, message: props.message };\r\n        }\r\n\r\n        return state;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return this.state.message !== nextState.message || this.state.visible !== nextState.visible;\r\n    }\r\n\r\n    render() {\r\n        const { message, visible } = this.state;\r\n\r\n        return (\r\n            <div\r\n                ref={this.rootRef}\r\n                className={classNames(\r\n                    classes.root,\r\n                    {\r\n                        [classes.show]: visible,\r\n                        [classes.hasAction]: message?.action\r\n                    }\r\n                )}\r\n                aria-hidden={!this.state.visible}>\r\n                <span>{message?.text}</span>\r\n\r\n                {\r\n                    message?.action &&\r\n                    <button\r\n                        className={classes.action}\r\n                        onClick={message.action.handler}>\r\n                        {message.action.text}\r\n                    </button>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default class SnackbarWrapper extends Component {\r\n\r\n    static contextType = SnackbarContext;\r\n\r\n    hideCompleteHandler = () => {\r\n        this.context.hide();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Snackbar\r\n                message={this.context.message}\r\n                onHideComplete={this.hideCompleteHandler} />\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { registerPromise } from '../../serviceWorker';\r\nimport WorkerManager from '../../WorkerManager';\r\nimport InputBox from '../InputBox/InputBox';\r\nimport Output from '../Output/Output';\r\nimport Snackbar from '../Snackbar/Snackbar';\r\nimport SnackbarContext from '../Snackbar/snackbarContext';\r\n\r\nexport default class Main extends Component {\r\n\r\n    showProgressBarTimeout = null;\r\n    workerManager = null;\r\n\r\n    static contextType = SnackbarContext;\r\n\r\n    state = {\r\n        generating: false,\r\n        output: ''\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.workerManager = new WorkerManager();\r\n\r\n        registerPromise\r\n            .then(({ availableOffline, updateDownloaded, registration }) => {\r\n\r\n                if (availableOffline) {\r\n                    this.context.show({ text: 'Now available offline!' });\r\n                } \r\n                \r\n                // SW updated an waiting for activation\r\n                else if (updateDownloaded) {\r\n                    this.context.show({\r\n                        text: 'An update is available',\r\n                        action: {\r\n                            text: 'Reload page',\r\n                            handler: () => {\r\n\r\n                                const waitingServiceWorker = registration.waiting;\r\n\r\n                                if (waitingServiceWorker) {\r\n                                    waitingServiceWorker.addEventListener('statechange', event => {\r\n                                        if (event.target.state === 'activated') {\r\n                                            window.location.reload();\r\n                                        }\r\n                                    });\r\n                                    waitingServiceWorker.postMessage({ type: 'SKIP_WAITING' });\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log('Error during service worker registration:', error);\r\n            });\r\n    }\r\n\r\n    generate = content => {\r\n\r\n        // If the code generation requires more than 100ms, show the progress bar\r\n        this.showProgressBarTimeout = setTimeout(() => {\r\n            this.setState({ generating: true, output: '' });\r\n        }, 100);\r\n\r\n        this.workerManager.generateQrCode(content)\r\n            .then(data => {\r\n                this.setState({ output: data });\r\n            })\r\n            .catch(error => {\r\n                // TODO: handle error\r\n                console.log('[Main] Error while generating QR Code');\r\n            })\r\n            .then(() => {\r\n                clearTimeout(this.showProgressBarTimeout);\r\n                this.setState({ generating: false });\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <main>\r\n                <InputBox\r\n                    generateHandler={this.generate}\r\n                    generating={this.state.generating} />\r\n                <Output imgSrc={this.state.output} />\r\n                <Snackbar />\r\n            </main>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport classes from './App.module.scss';\r\nimport Header from './Header/Header';\r\nimport Main from './Main/Main';\r\nimport ToastContext from './Snackbar/snackbarContext';\r\n\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    snackBarMessage: null\r\n  }\r\n\r\n  snackBarQueue = []\r\n\r\n  showSnackbar = message => {\r\n    if (this.state.snackBarMessage === null) {\r\n      this.setState({ snackBarMessage: message });\r\n    }\r\n    else {\r\n      this.snackBarQueue.push(message);\r\n    }\r\n  }\r\n\r\n  hideSnackbar = () => {\r\n    if (this.snackBarQueue.length === 0) {\r\n      this.setState({ snackBarMessage: null });\r\n    } else {\r\n      const nextElement = this.snackBarQueue.shift();\r\n      this.setState({ snackBarMessage: nextElement });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ToastContext.Provider\r\n        value={{\r\n          message: this.state.snackBarMessage,\r\n          show: this.showSnackbar,\r\n          hide: this.hideSnackbar\r\n        }}>\r\n        <div className={classes.app}>\r\n          <Header />\r\n          <Main />\r\n        </div>\r\n      </ToastContext.Provider>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport { render } from 'react-snapshot';\r\nimport App from './components/App';\r\nimport './index.scss';\r\nimport { register } from './serviceWorker';\r\n\r\nconst rootElement = document.getElementById('root');\r\n\r\nrender(<App />, rootElement);\r\n\r\nregister();"],"sourceRoot":""}